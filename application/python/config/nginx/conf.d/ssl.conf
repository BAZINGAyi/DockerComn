upstream web {
  # ip_hash;
  server web:8000  fail_timeout=100s;
  #server 10.89.200.40:8000 backup;
  keepalive 300;
}

# 定义限流区域，限制每个IP每秒最多1个请求，使用20MB的共享内存
# limit_req_zone $binary_remote_addr zone=mylimit:10m rate=1r/s;

server {
    listen 443 http2 ssl;
    listen [::]:443 http2 ssl;

    server_name server_IP_address;

    ssl_certificate /etc/nginx/conf.d/certs/self.crt;
    ssl_certificate_key /etc/nginx/conf.d/certs/self.key;
    ssl_dhparam /etc/nginx/conf.d/certs/dhparam.pem;
    ########################################################################
    # from https://cipherli.st/                                            #
    # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html #
    ########################################################################

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    ##################################
    # END https://cipherli.st/ BLOCK #
    ##################################

    location / {
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://web/;
            proxy_connect_timeout 159s;
            proxy_send_timeout   600;
            proxy_read_timeout   600;
            keepalive_timeout 600s;

            # rate limit
            # limit_req zone=mylimit burst=5 nodelay;
  }


  listen 8000;
  server_name localhost;

  location /static {
    autoindex on;
    alias /src/static;
  }
}

server {
    listen 666 http2 ssl;
    listen [::]:666 http2 ssl;

    server_name server_IP_address;

    ssl_certificate /etc/nginx/conf.d/certs/self.crt;
    ssl_certificate_key /etc/nginx/conf.d/certs/self.key;
    ssl_dhparam /etc/nginx/conf.d/certs/dhparam.pem;
    ########################################################################
    # from https://cipherli.st/                                            #
    # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html #
    ########################################################################

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    #add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    ##################################
    # END https://cipherli.st/ BLOCK #
    ##################################

    add_header X-Frame-Options sameorigin always;

    location = / {
        root   /var/frontend/dist;
        index  index.html index.htm;
    }

   # location = / {
   #     root   /var/frontend/dist;
   #     index  index.html index.htm;

    #}

    location ^~ /index.html {
        root   /var/frontend/dist;
        index  index.html index.htm;

    }

    location ^~ /favicon.png {
        root /var/frontend/dist;
    }



    location ^~ /static {
        alias /var/frontend/dist/static;
    }

    location ~* /.*  {
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-PORT $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass https://proxy_server;
    }

  server_name localhost;

}

